"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.overwriteJsonFileFields = exports.overwriteFile = void 0;
const fs_1 = __importStar(require("fs"));
const overwriteFile = (fileSrcPath, fileTargetPath) => {
    if (!fs_1.existsSync(fileSrcPath))
        return;
    const content = fs_1.default.readFileSync(fileSrcPath);
    fs_1.default.writeFileSync(fileTargetPath, content);
};
exports.overwriteFile = overwriteFile;
const overwriteJsonFileFields = (fileSrcPath, fileTargetPath, copyFields) => {
    const srcContent = fs_1.default.readFileSync(fileSrcPath).toString();
    // eslint-disable-next-line max-len
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any
    const srcJson = JSON.parse(srcContent);
    const targetContent = fs_1.default.readFileSync(fileTargetPath).toString();
    // eslint-disable-next-line max-len
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any
    const targetJson = JSON.parse(targetContent);
    copyFields.forEach((field) => {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        targetJson[field] = srcJson[field];
    });
    fs_1.default.writeFileSync(fileTargetPath, JSON.stringify(targetJson, null, 2));
};
exports.overwriteJsonFileFields = overwriteJsonFileFields;
//# sourceMappingURL=file-utility.js.map